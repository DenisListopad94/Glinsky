'''
Задачи на кортежи

1.	Дан кортеж. Вывести все его совершенные числа. (6,2,7,8)
6 = 1 + 2 + 3
28 = 1 + 2 +4 + 7 +14

Соверше́нное число́  — натуральное число, равное сумме всех своих собственных делителей 
(то есть всех положительных делителей)
'''

# def sov_number(number):
#     list_1 = []
#     for i in range(1, number):
#         if number % i == 0:
#             list_1.append(i)
#     if sum(list_1) == number:
#         print(number, end=' = ')
#         for i in range(len(list_1)):
#             if len(list_1) - 1 != i and len(list_1) != 1:
#                 print(str(list_1[i]), end=' + ')
#             else:
#                 print(str(list_1[i]))
#
#
# a_tuple = (6, 2, 7, 8)
# for i in a_tuple:
#     sov_number(i)

'''2.	Дан кортеж. Написать программу, определяющую сколько раз менялся знак в кортеже. (5,2,-2,7,-8,-9,1) 4 раза'''

# a_tuple = (5, 2, -2, 7, -8, -9, 1, 2, -1)
#
# prev = a_tuple[0]
# counter = 0
#
# for i in a_tuple:
#     if i > 0 and prev < 0:
#         counter += 1
#         prev = i
#     elif i < 0 and prev > 0:
#         counter += 1
#         prev = i
# print(counter)

'''
Задачи на списки

3.	Задано два списка. Найти наименьшие среди элементов первого списка, которые не входят во второй список или вывести
 что такого элемента нет.
[4,1,6,9]  [8,1,2,4,9,5,7,6] -> нет такого элемента
'''

# list_1 = [4,1,6,9]
# list_2 = [8,1,2,4,9,5,7,6]
#
# min_list_3 = []
#
# for i in list_1:
#     if i not in list_2:
#         min_list_3.append(i)
#
# if len(min_list_3) == 0:
#     print('нет такого элемента')
#
# else:
#     print(min(min_list_3))


'''
4.	Дан список положительных целых чисел . Вставить после каждого чётного числа его перевёртыш. Например для чисел:
18 -> 81,
42 -> 24,
8 ->  8,
122 -> 221
'''

# list = [18, 19, 42, 9, 8, 122]
#
# for i in list:
#     if i % 2 == 0:
#         print(str(i)[::-1])

'''
5.	Дан список . Вычислить сколько раз в нем встречается каждый элемент, не используя сортировки. [5,2,4,5,1,2]
1 –> 1
2 –> 2
4 –> 1
5 –> 2
'''

# list = [5,2,4,5,1,2]
# unique_numbers = set(list)
#
# for i in unique_numbers:
#     print(f'{i} -> {list.count(i)}')

'''
6.	Дан список , преобразуйте его, вставив 0 между числами.
[7 4 1]
Sample Output:
7 0 4 0 1'''

# list_1 = [7, 4, 1]
#
# for i in list_1:
#     if list_1.index(i) != len(list_1)-1:
#         print(i, end=' 0 ')
#     else:
#         print(i, end='')

'''
7.	Во входной строке записана последовательность чисел через пробел. Для каждого числа выведите слово YES
(в отдельной строке), если это число ранее встречалось в последовательности или NO, если не встречалось.
'''

# some_str = '1 0 1 2 3 4 0 5 3'
# list_1 = some_str.split()
# set_1 = set(list_1)
#
# for i in set_1:
#     print(f'{i} -> {"YES" if list_1.count(i)>1 else "NO "}')
#

'''
8.	Август и Беатриса играют в игру. Август загадал натуральное число от 1 до n. Беатриса пытается угадать это число, 
для этого она называет некоторые множества натуральных чисел. Август отвечает Беатрисе YES, 
если среди названных ей чисел есть задуманное или NO в противном случае. После нескольких заданных вопросов 
Беатриса запуталась в том, какие вопросы она задавала и какие ответы получила и просит вас помочь ей определить, 
какие числа мог задумать Август. В первой строке задано n - максимальное число, которое мог загадать Август. 
Далее каждая строка содержит вопрос Беатрисы (множество чисел, разделенных пробелом) и ответ Августа на этот вопрос .
Вы должны вывести через пробел, в порядке возрастания, все числа, которые мог задумать Август.
'''

# n = int(input())
# all_nums = set(range(1, n + 1))
# possible_nums = all_nums
# while True:
#     guess = input()
#     if guess == 'HELP':
#         break
#     guess = {int(x) for x in guess.split()}
#     answer = input()
#     if answer == 'YES':
#         possible_nums &= guess
#     else:
#         possible_nums &= all_nums - guess
#
# print(' '.join([str(x) for x in sorted(possible_nums)]))

'''
Задачи на словари

9.	Вам дан словарь, состоящий из пар слов. Каждое слово является синонимом к парному ему слову.
Все слова в словаре различны. Для слова из словаря, записанного в последней строке, определите его синоним.'''

# dictionary = {'Абсолютный': 'совершенный',
#               'Абстрактный': 'отвлеченный',
#               'Аграрный': 'земледельческий',
#               'Адекватный': 'соответствующий',
#               'Активный': 'деятельный'}
#
# keys = [i for i in dictionary.keys()]
# print(dictionary[keys[-1]])


'''
10.	Коля устал запоминать телефонные номера и заказал у Вас программу, которая заменила бы ему телефонную книгу.
Коля может послать программе два вида запросов: строку, содержащую имя контакта и его номер, разделенные пробелом,
или просто имя контакта. В первом случае программа должна добавить в книгу новый номер, во втором –
вывести номер контакта. Ввод происходит до символа точки. Если введенное имя уже содержится в списке контактов,
необходимо перезаписать номер.
Sample Input:
Ben 89001234050
Alice 210-220
Alice
Alice 404-502
Ben
Nick
Alice
Robert 51234047129
.
Sample Output:
210-220
89001234050
+4(908)273-22-42
404-502
'''

# dictionary = {}
# list = []
#
# while True:
#     list = input().split()
#     if len(list) == 2:
#         dictionary[list[0]] = list[1]
#     elif len(list) == 1 and list[0] != '.' and list[0] in dictionary:
#         print(dictionary[list[0]])
#     elif list[0] == '.':
#         break
